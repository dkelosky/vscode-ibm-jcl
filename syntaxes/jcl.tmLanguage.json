{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Job Control Language",
  "patterns": [
    {
      "include": "#jcl_syntax"
    }
  ],
  "repository": {
    "jcl_syntax": {
      "patterns": [
        {
          "include": "#lineTooLong"
        },
        {
          "include": "#lineComment"
        },
        {
          "include": "#parseLine"
        },
        {
          "include": "#jclLineStart"
        }
      ]
    },
    "additionaljclHighlight": {
      "patterns": [
        {
          "include": "#operators"
        },
        {
          "include": "#numbers"
        }
      ]
    },
    "lineTooLong": {
      "patterns": [
        {
          "name": "invalid.illegal.jcl",
          "match": "^.{81,}"
        }
      ]
    },
    "lineComment": {
      "patterns": [
        {
          "match": "^(\\/\\/\\*.{69,69})(.*)",
          "name": "comment.line.double-slash.jcl",
          "captures": {
            "1": {
              "name": "comment.line.double-slash.jcl"
            },
            "2": {
              "patterns": [
                {
                  "include": "#sequenceNumbers"
                }
              ]
            }
          }
        },
        {
          "match": "\\/\\/\\*.*",
          "name": "comment.line.double-slash.jcl"
        }
      ]
    },
    "parseLine": {
      "patterns": [
        {
          "match": "^(.{72,72})(.{0,8})",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#jclLineStart"
                }
              ]
            },
            "2": {
              "patterns": [
                {
                  "include": "#sequenceNumbers"
                }
              ]
            }
          }
        }
      ]
    },
    "jclLineStart": {
      "patterns": [
        {
          "begin": "([^*]\\S*)?\\s+(DD\\s+\\*\\S*?)\\s(.*)",
          "end": "(.*)(^\\/\\*)(.*)",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "#labels"
                }
              ]
            },
            "2": {
              "name": "keyword.other.jcl"
            },
            "3": {
              "name": "comment.line.double-slash.jcl"
            }
          },
          "endCaptures": {
            "1": {
              "patterns": [
                {
                  "match": "(\\/\\/)?(.*)",
                  "captures": {
                    "1": {
                      "patterns": [
                        {
                          "include": "#labels"
                        }
                      ]
                    },
                    "2": {
                      "name": "variable.parameter.jcl"
                    }
                  }
                }
              ]
            },
            "2": {
              "name": "keyword.other.jcl"
            },
            "3": {
              "name": "comment.line.double-slash.jcl"
            }
          },
          "contentName": "variable.parameter.jcl"
        },
        {
          "begin": "([^*]\\S*)?\\s+(IF)\\s",
          "end": "(.*)(THEN)(.*)",
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "#labels"
                }
              ]
            },
            "2": {
              "name": "keyword.other.jcl"
            }
          },
          "endCaptures": {
            "1": {
              "patterns": [
                {
                  "match": "(\\/\\/)?(.*)",
                  "captures": {
                    "1": {
                      "patterns": [
                        {
                          "include": "#labels"
                        }
                      ]
                    },
                    "2": {
                      "name": "variable.parameter.jcl"
                    }
                  }
                }
              ]
            },
            "2": {
              "name": "keyword.other.jcl"
            },
            "3": {
              "name": "comment.line.double-slash.jcl"
            }
          },
          "contentName": "variable.parameter.jcl"
        },
        {
          "match": "([^*]\\S*)?\\s+(.*)",
          "captures": {
            "1": {
              "name": "entity.name.function.jcl"
            },
            "2": {
              "patterns": [
                {
                  "include": "#jclInstruction"
                }
              ]
            }
          }
        }
      ]
    },
    "jclInstruction": {
      "patterns": [
        {
          "match": "(\\S+)\\s*(.*)",
          "captures": {
            "1": {
              "name": "keyword.other.jcl"
            },
            "2": {
              "patterns": [
                {
                  "include": "#jclArguments"
                }
              ]
            }
          }
        }
      ]
    },
    "jclArguments": {
      "patterns": [
        {
          "include": "#stringType"
        },
        {
          "match": "(\\S*)(.*)",
          "captures": {
            "1": {
              "name": "keyword.control.jcl",
              "patterns": [
                {
                  "include": "#additionaljclHighlight"
                }
              ]
            },
            "2": {
              "name": "comment.line.double-slash.jcl"
            }
          }
        }
      ]
    },
    "stringType": {
      "patterns": [
        {
          "match": "(\\S*?)('.*?')(.*)",
          "captures": {
            "1": {
              "name": "keyword.control.jcl",
              "patterns": [
                {
                  "include": "#additionaljclHighlight"
                }
              ]
            },
            "2": {
              "name": "string.quoted.single.jcl"
            },
            "3": {
              "patterns": [
                {
                  "include": "#jclArguments"
                }
              ]
            }
          }
        }
      ]
    },
    "labels": {
      "match": ".*",
      "name": "entity.name.function.jcl"
    },
    "operators": {
      "match": "[=(),+]",
      "name": "keyword.operator.jcl"
    },
    "numbers": {
      "match": "(?<=[=(),*\\s+])-?\\d*(?=[=(),*+\\s]|$)",
      "name": "constant.numeric.jcl"
    },
    "sequenceNumbers": {
      "name": "constant.numeric.jcl",
      "match": ".*"
    }
  },
  "scopeName": "source.jcl"
}
